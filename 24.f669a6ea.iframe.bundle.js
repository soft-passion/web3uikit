(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{"./node_modules/@web3auth/openlogin-adapter/dist/openloginAdapter.esm.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"OpenloginAdapter",(function(){return OpenloginAdapter})),__webpack_require__.d(__webpack_exports__,"getOpenloginDefaultOptions",(function(){return getOpenloginDefaultOptions}));var _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@toruslabs/openlogin/dist/openlogin.esm.js"),_web3auth_base__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@web3auth/base/dist/base.esm.js"),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@babel/runtime/helpers/defineProperty.js"),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__),lodash_merge__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/lodash.merge/index.js"),lodash_merge__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(lodash_merge__WEBPACK_IMPORTED_MODULE_3__),loglevel__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/loglevel/lib/loglevel.js"),loglevel__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(loglevel__WEBPACK_IMPORTED_MODULE_4__);const getOpenloginDefaultOptions=(chainNamespace,chainId)=>({adapterSettings:{network:_toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.b.MAINNET,clientId:"",uxMode:_toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.c.POPUP},chainConfig:chainNamespace?Object(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.m)(chainNamespace,chainId):void 0,loginSettings:{relogin:!0}});function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}class OpenloginAdapter extends _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.e{constructor(params){var _params$chainConfig,_params$chainConfig2,_params$chainConfig3;super(),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this,"name",_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.i.OPENLOGIN),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this,"adapterNamespace",_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.c.MULTICHAIN),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this,"type",_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.a.IN_APP),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this,"openloginInstance",null),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this,"status",_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.d.NOT_READY),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this,"currentChainNamespace",_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.f.EIP155),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this,"openloginOptions",void 0),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this,"loginSettings",{}),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this,"privKeyProvider",null),loglevel__WEBPACK_IMPORTED_MODULE_4___default.a.debug("const openlogin adapter",params);const defaultOptions=getOpenloginDefaultOptions(null===(_params$chainConfig=params.chainConfig)||void 0===_params$chainConfig?void 0:_params$chainConfig.chainNamespace,null===(_params$chainConfig2=params.chainConfig)||void 0===_params$chainConfig2?void 0:_params$chainConfig2.chainId);if(this.openloginOptions=_objectSpread(_objectSpread({clientId:"",network:_toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.b.MAINNET},defaultOptions.adapterSettings),params.adapterSettings||{}),this.loginSettings=_objectSpread(_objectSpread({},defaultOptions.loginSettings),params.loginSettings),null!==(_params$chainConfig3=params.chainConfig)&&void 0!==_params$chainConfig3&&_params$chainConfig3.chainNamespace){var _params$chainConfig4;this.currentChainNamespace=null===(_params$chainConfig4=params.chainConfig)||void 0===_params$chainConfig4?void 0:_params$chainConfig4.chainNamespace;const defaultChainIdConfig=defaultOptions.chainConfig?defaultOptions.chainConfig:{};if(this.chainConfig=_objectSpread(_objectSpread({},defaultChainIdConfig),null==params?void 0:params.chainConfig),loglevel__WEBPACK_IMPORTED_MODULE_4___default.a.debug("const openlogin chainConfig",this.chainConfig),!this.chainConfig.rpcTarget)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.j.invalidParams("rpcTarget is required in chainConfig")}}get chainConfigProxy(){return this.chainConfig?_objectSpread({},this.chainConfig):null}get provider(){var _this$privKeyProvider;return(null===(_this$privKeyProvider=this.privKeyProvider)||void 0===_this$privKeyProvider?void 0:_this$privKeyProvider.provider)||null}set provider(_){throw new Error("Not implemented")}async init(options){var _this$openloginOption;if(super.checkInitializationRequirements(),null===(_this$openloginOption=this.openloginOptions)||void 0===_this$openloginOption||!_this$openloginOption.clientId)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.j.invalidParams("clientId is required before openlogin's initialization");if(!this.chainConfig)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.j.invalidParams("chainConfig is required before initialization");this.openloginInstance=new _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.d(this.openloginOptions);const redirectResult=Object(_toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.e)();let isRedirectResult=!0;Object.keys(redirectResult).length>0&&redirectResult.result&&(isRedirectResult=!0),await this.openloginInstance.init(),this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.d.READY,this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.b.READY,_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.i.OPENLOGIN);try{this.openloginInstance.privKey&&(options.autoConnect||isRedirectResult)&&await this.connect()}catch(error){loglevel__WEBPACK_IMPORTED_MODULE_4___default.a.error("Failed to connect with cached openlogin provider",error),this.emit("ERRORED",error)}}async connect(params){super.checkConnectionRequirements(),this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.d.CONNECTING,this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.b.CONNECTING,_objectSpread(_objectSpread({},params),{},{adapter:_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.i.OPENLOGIN}));try{return await this.connectWithProvider(params),this.provider}catch(error){if(loglevel__WEBPACK_IMPORTED_MODULE_4___default.a.error("Failed to connect with openlogin provider",error),this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.d.READY,this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.b.ERRORED,error),null!=error&&error.message.includes("user closed popup"))throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.k.popupClosed();throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.k.connectionError("Failed to login with openlogin")}}async disconnect(){let options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};if(this.status!==_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.d.CONNECTED)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.k.notConnectedError("Not connected with wallet");if(!this.openloginInstance)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.j.notReady("openloginInstance is not ready");await this.openloginInstance.logout(),options.cleanup?(this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.d.NOT_READY,this.openloginInstance=null,this.privKeyProvider=null):this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.d.READY,this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.b.DISCONNECTED)}async getUserInfo(){if(this.status!==_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.d.CONNECTED)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.k.notConnectedError("Not connected with wallet");if(!this.openloginInstance)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.j.notReady("openloginInstance is not ready");return await this.openloginInstance.getUserInfo()}setAdapterSettings(adapterSettings){if(this.status===_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.d.READY)return;const defaultOptions=getOpenloginDefaultOptions();this.openloginOptions=_objectSpread(_objectSpread(_objectSpread({},defaultOptions.adapterSettings),this.openloginOptions||{}),adapterSettings)}setChainConfig(customChainConfig){super.setChainConfig(customChainConfig),this.currentChainNamespace=customChainConfig.chainNamespace}async connectWithProvider(params){if(!this.chainConfig)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.j.invalidParams("chainConfig is required before initialization");if(!this.openloginInstance)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.j.notReady("openloginInstance is not ready");if(this.currentChainNamespace===_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.f.SOLANA){const{SolanaPrivateKeyProvider:SolanaPrivateKeyProvider}=await Promise.all([__webpack_require__.e(0),__webpack_require__.e(1),__webpack_require__.e(2),__webpack_require__.e(17)]).then(__webpack_require__.bind(null,"./node_modules/@web3auth/solana-provider/dist/solanaProvider.esm.js"));this.privKeyProvider=new SolanaPrivateKeyProvider({config:{chainConfig:this.chainConfig}})}else{if(this.currentChainNamespace!==_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.f.EIP155)throw new Error("Invalid chainNamespace: ".concat(this.currentChainNamespace," found while connecting to wallet"));{const{EthereumPrivateKeyProvider:EthereumPrivateKeyProvider}=await Promise.all([__webpack_require__.e(0),__webpack_require__.e(3),__webpack_require__.e(15)]).then(__webpack_require__.bind(null,"./node_modules/@web3auth/ethereum-provider/dist/ethereumProvider.esm.js"));this.privKeyProvider=new EthereumPrivateKeyProvider({config:{chainConfig:this.chainConfig}})}}!this.openloginInstance.privKey&&params&&await this.openloginInstance.login(lodash_merge__WEBPACK_IMPORTED_MODULE_3___default()(this.loginSettings,{loginProvider:params.loginProvider},{extraLoginOptions:{login_hint:null==params?void 0:params.login_hint}}));let finalPrivKey=this.openloginInstance.privKey;if(finalPrivKey){if(this.currentChainNamespace===_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.f.SOLANA){const{getED25519Key:getED25519Key}=await Promise.all([__webpack_require__.e(1),__webpack_require__.e(20)]).then(__webpack_require__.bind(null,"./node_modules/@toruslabs/openlogin-ed25519/dist/openloginEd25519.esm.js"));finalPrivKey=getED25519Key(finalPrivKey).sk.toString("hex")}await this.privKeyProvider.setupProvider(finalPrivKey),this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.d.CONNECTED,this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.b.CONNECTED,{adapter:_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.i.OPENLOGIN,reconnected:!params})}}}}}]);